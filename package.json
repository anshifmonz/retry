{
  "name": "@anshifmonz/retry",
  "version": "1.0.0",
  "description": "A production-grade retry utility with per-attempt timeouts, dual abort control, and rich error context",
  "main": "dist/retry.js",
  "module": "dist/retry.mjs",
  "types": "dist/retry.d.ts",
  "exports": {
    ".": {
      "import": "./dist/retry.mjs",
      "require": "./dist/retry.js",
      "types": "./dist/retry.d.ts"
    }
  },
  "files": [
    "dist",
    "src",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "build": "npm run build:cjs && npm run build:esm && npm run build:types",
    "build:cjs": "tsc --module commonjs --outDir dist --declaration false",
    "build:esm": "tsc --module esnext --outDir dist --declaration false --outFile dist/retry.mjs",
    "build:types": "tsc --declaration --emitDeclarationOnly --outDir dist",
    "test": "tsx retry.test.ts",
    "test:watch": "tsx --watch retry.test.ts",
    "test:coverage": "c8 tsx retry.test.ts",
    "lint": "eslint . --ext .ts",
    "format": "prettier --write \"**/*.{ts,md,json}\"",
    "prepublishOnly": "npm run build && npm test",
    "clean": "rm -rf dist"
  },
  "keywords": [
    "retry",
    "backoff",
    "exponential-backoff",
    "jitter",
    "timeout",
    "abort",
    "api",
    "fetch",
    "resilience",
    "error-handling",
    "typescript",
    "async",
    "promise"
  ],
  "author": {
    "name": "Anshif Monz",
    "url": "https://github.com/anshifmonz"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/anshifmonz/retry.git"
  },
  "bugs": {
    "url": "https://github.com/anshifmonz/retry/issues"
  },
  "homepage": "https://github.com/anshifmonz/retry#readme",
  "devDependencies": {
    "@types/node": "^20.0.0",
    "c8": "^9.0.0",
    "eslint": "^8.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "prettier": "^3.0.0",
    "tsx": "^4.0.0",
    "typescript": "^5.0.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "publishConfig": {
    "access": "public"
  }
}
